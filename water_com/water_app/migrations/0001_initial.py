# Generated by Django 2.0.5 on 2018-06-18 20:10

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='App_suggestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suggestion', models.TextField(default='', verbose_name='提交内容')),
                ('image', models.ImageField(null=True, upload_to='suggestion/', verbose_name='附图')),
                ('image_url', models.CharField(max_length=200, null=True, verbose_name='反馈意见附图链接')),
                ('suggest_user_name', models.CharField(max_length=50, verbose_name='提交用户昵称')),
                ('suggest_user_phone', models.CharField(max_length=11, verbose_name='提交用户手机号')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='提交时间')),
            ],
            options={
                'verbose_name': 'APP 反馈意见表',
                'verbose_name_plural': 'APP 反馈意见表',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('release_title', models.CharField(max_length=50, unique=True, verbose_name='文章标题')),
                ('release_name', models.CharField(max_length=20, verbose_name='来源')),
                ('release_icon', models.ImageField(null=True, upload_to='Article/', verbose_name='缩略图')),
                ('release_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='发布时间')),
                ('release_update', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('comment', models.TextField(default='', verbose_name='发布内容')),
                ('status', models.IntegerField(choices=[(0, '显示'), (1, '不显示')], default=0, verbose_name='状态')),
            ],
            options={
                'verbose_name': '知识表',
                'verbose_name_plural': '知识表',
            },
        ),
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area_id', models.CharField(default='', max_length=200, verbose_name='区域编号')),
                ('area_name', models.CharField(default='', max_length=200, verbose_name='区域名字')),
                ('street_id', models.CharField(default='', max_length=200, verbose_name='街道编号')),
                ('street_name', models.CharField(default='', max_length=200, verbose_name='街道名字')),
                ('village_id', models.CharField(default='', max_length=200, verbose_name='居委会编号')),
                ('village_name', models.CharField(default='', max_length=200, verbose_name='居委会名字')),
                ('street_lat', models.CharField(default='', max_length=200, verbose_name='街道纬度')),
                ('street_lng', models.CharField(default='', max_length=200, verbose_name='街道经度')),
                ('count', models.IntegerField(default=0, verbose_name='区域报警数量')),
            ],
            options={
                'verbose_name': '区域街道居委',
                'verbose_name_plural': '区域街道居委',
            },
        ),
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_type', models.CharField(default='', max_length=20, null=True, verbose_name='设备类型')),
                ('create_time', models.DateTimeField(null=True, verbose_name='发出时间')),
                ('state', models.CharField(default='', max_length=20, null=True, verbose_name='报警状态')),
                ('battery_voltage', models.CharField(default='', max_length=255, null=True, verbose_name='电压')),
                ('device_id', models.CharField(default='', max_length=50, null=True, verbose_name='设备编号')),
                ('received_time', models.DateTimeField(null=True, verbose_name='接收时间')),
                ('info_type', models.CharField(default='', max_length=20, null=True, verbose_name='数据状态类型')),
                ('protocol_version', models.CharField(default='', max_length=255, null=True, verbose_name='协议版本')),
                ('software_version', models.CharField(default='', max_length=255, null=True, verbose_name='软件版本')),
                ('smoke_concentration', models.CharField(default='', max_length=255, null=True, verbose_name='烟感点')),
                ('get_time', models.DateTimeField(auto_now_add=True, verbose_name='入表时间')),
            ],
            options={
                'verbose_name': '警报(原数据)',
                'verbose_name_plural': '警报(原数据)',
            },
        ),
        migrations.CreateModel(
            name='Day_data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_type', models.CharField(default='', max_length=20, null=True, verbose_name='设备类型')),
                ('create_time', models.DateTimeField(null=True, verbose_name='发出时间')),
                ('state', models.CharField(default='', max_length=20, null=True, verbose_name='报警状态')),
                ('battery_voltage', models.CharField(default='', max_length=255, null=True, verbose_name='电压')),
                ('device_id', models.CharField(default='', max_length=50, null=True, verbose_name='设备编号')),
                ('received_time', models.DateTimeField(null=True, verbose_name='接收时间')),
                ('info_type', models.CharField(default='', max_length=20, null=True, verbose_name='数据状态类型')),
                ('protocol_version', models.CharField(default='', max_length=255, null=True, verbose_name='协议版本')),
                ('software_version', models.CharField(default='', max_length=255, null=True, verbose_name='软件版本')),
                ('smoke_concentration', models.CharField(default='', max_length=255, null=True, verbose_name='烟感点')),
                ('get_time', models.DateTimeField(auto_now_add=True, verbose_name='入表时间')),
            ],
            options={
                'verbose_name': '日志',
                'verbose_name_plural': '日志',
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('e_id', models.CharField(max_length=50, verbose_name='物品标识号')),
                ('name', models.CharField(max_length=200, null=True, verbose_name='名字')),
                ('area', models.CharField(max_length=500, null=True, verbose_name='所属区域')),
                ('street', models.CharField(max_length=500, null=True, verbose_name='所属街道')),
                ('village', models.CharField(max_length=500, null=True, verbose_name='所属小区')),
                ('status', models.IntegerField(choices=[(7, '正常'), (4, '低电压'), (1, '报警'), (0, '未知')], default=0, verbose_name='物品状态')),
                ('address', models.CharField(max_length=100, null=True, verbose_name='具体地址')),
                ('location_x', models.CharField(max_length=100, null=True, verbose_name='纬度')),
                ('location_y', models.CharField(max_length=100, null=True, verbose_name='经度')),
            ],
            options={
                'verbose_name': '传感器(物品)',
                'verbose_name_plural': '传感器(物品)',
            },
        ),
        migrations.CreateModel(
            name='Equipment_type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='设备类型名字')),
                ('type_id', models.CharField(max_length=50, verbose_name='类型编号')),
                ('imageUrl', models.CharField(blank=True, max_length=200, null=True, verbose_name='缩略图')),
                ('build_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('height', models.CharField(blank=True, max_length=50, null=True, verbose_name='图片高度')),
                ('updata_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('count', models.IntegerField(default=0, verbose_name='数量')),
                ('status', models.IntegerField(choices=[(0, '正常'), (1, '停用')], default=0, verbose_name='状态')),
            ],
            options={
                'verbose_name': '传感器监控类型(物品类型)',
                'verbose_name_plural': '传感器监控类型(物品类型)',
            },
        ),
        migrations.CreateModel(
            name='Event_data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_type', models.CharField(default='', max_length=20, null=True, verbose_name='设备类型')),
                ('create_time', models.DateTimeField(null=True, verbose_name='发出时间')),
                ('state', models.CharField(default='', max_length=20, null=True, verbose_name='报警状态')),
                ('battery_voltage', models.CharField(default='', max_length=255, null=True, verbose_name='电压')),
                ('device_id', models.CharField(default='', max_length=50, null=True, verbose_name='设备编号')),
                ('received_time', models.DateTimeField(null=True, verbose_name='接收时间')),
                ('info_type', models.CharField(default='', max_length=20, null=True, verbose_name='数据状态类型')),
                ('protocol_version', models.CharField(default='', max_length=255, null=True, verbose_name='协议版本')),
                ('software_version', models.CharField(default='', max_length=255, null=True, verbose_name='软件版本')),
                ('smoke_concentration', models.CharField(default='', max_length=255, null=True, verbose_name='烟感点')),
                ('get_time', models.DateTimeField(auto_now_add=True, verbose_name='入表时间')),
                ('status', models.CharField(default='True', max_length=50, null=True, verbose_name='处理标识')),
            ],
            options={
                'verbose_name': '事件',
                'verbose_name_plural': '事件',
            },
        ),
        migrations.CreateModel(
            name='Focus_data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_type', models.CharField(default='', max_length=20, null=True, verbose_name='设备类型')),
                ('create_time', models.DateTimeField(null=True, verbose_name='发出时间')),
                ('state', models.CharField(default='', max_length=20, null=True, verbose_name='报警状态')),
                ('battery_voltage', models.CharField(default='', max_length=255, null=True, verbose_name='电压')),
                ('device_id', models.CharField(default='', max_length=50, null=True, verbose_name='设备编号')),
                ('received_time', models.DateTimeField(null=True, verbose_name='接收时间')),
                ('info_type', models.CharField(default='', max_length=20, null=True, verbose_name='数据状态类型')),
                ('protocol_version', models.CharField(default='', max_length=255, null=True, verbose_name='协议版本')),
                ('software_version', models.CharField(default='', max_length=255, null=True, verbose_name='软件版本')),
                ('smoke_concentration', models.CharField(default='', max_length=255, null=True, verbose_name='烟感点')),
                ('get_time', models.DateTimeField(auto_now_add=True, verbose_name='入表时间')),
            ],
            options={
                'verbose_name': '实时报警',
                'verbose_name_plural': '实时报警',
            },
        ),
        migrations.CreateModel(
            name='Getdata',
            fields=[
                ('account_id', models.CharField(max_length=200, verbose_name='客户id')),
                ('account_name', models.CharField(max_length=20, verbose_name='客户名称')),
                ('address', models.CharField(max_length=255, verbose_name='地址')),
                ('belonged_account', models.CharField(max_length=200, verbose_name='所属客户')),
                ('belonged_account_group_id', models.CharField(max_length=200, verbose_name='客户分组id')),
                ('belonged_account_group_name', models.CharField(max_length=255, verbose_name='分组名称')),
                ('build_time', models.CharField(max_length=200, null=True, verbose_name='安装时间')),
                ('cluster', models.CharField(max_length=200, verbose_name='cluster')),
                ('committee_id', models.CharField(max_length=200, verbose_name='居委会id')),
                ('committee_name', models.CharField(max_length=255, verbose_name='所属居委名称')),
                ('create_time', models.DateTimeField(max_length=255, null=True, verbose_name='创建时间')),
                ('create_user', models.CharField(max_length=255, verbose_name='记录创建人')),
                ('height', models.CharField(max_length=50, verbose_name='高度')),
                ('high', models.CharField(max_length=50, verbose_name='高度')),
                ('image_url', models.CharField(max_length=255, verbose_name='图片链接')),
                ('is_available', models.CharField(max_length=20, verbose_name='是否可用')),
                ('lat', models.CharField(max_length=100, verbose_name='纬度')),
                ('lng', models.CharField(max_length=100, verbose_name='经度')),
                ('location', models.CharField(max_length=200, verbose_name='地区')),
                ('photo_url', models.CharField(max_length=255, verbose_name='图片url')),
                ('piece_id', models.CharField(max_length=200, verbose_name='片区ID')),
                ('piece_name', models.CharField(max_length=200, verbose_name='部件名字')),
                ('point_id', models.CharField(max_length=200, verbose_name='点位id')),
                ('point_type', models.CharField(max_length=200, verbose_name='点位类型')),
                ('received_time', models.CharField(max_length=200, null=True, verbose_name='接受时间')),
                ('region_id', models.CharField(max_length=200, verbose_name='街道id')),
                ('region_name', models.CharField(max_length=200, verbose_name='所属区域名称')),
                ('sensor_id', models.CharField(max_length=200, verbose_name='传感器id')),
                ('sensor_name', models.CharField(max_length=200, verbose_name='传感器名称')),
                ('sensor_number', models.CharField(max_length=50, verbose_name='传感器编号')),
                ('sensor_point_id', models.CharField(max_length=200, primary_key=True, serialize=False, verbose_name='主键id')),
                ('sensor_type', models.CharField(max_length=20, verbose_name='传感器类型')),
                ('size', models.CharField(max_length=20, verbose_name='大小')),
                ('source', models.CharField(max_length=20, verbose_name='来源')),
                ('status', models.CharField(max_length=20, verbose_name='状态')),
                ('g_type', models.CharField(max_length=20, verbose_name='类型')),
                ('updata_time', models.CharField(max_length=200, null=True, verbose_name='更新时间')),
                ('update_user', models.CharField(max_length=255, verbose_name='更新人')),
                ('video_url', models.CharField(max_length=500, verbose_name='视频url')),
                ('water_type', models.CharField(max_length=20, verbose_name='water_type')),
            ],
            options={
                'verbose_name': '传感器信息(原数据)',
                'verbose_name_plural': '传感器信息(原数据)',
            },
        ),
        migrations.CreateModel(
            name='Login',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Authenticator', models.CharField(max_length=200, verbose_name='用户凭证')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='保存时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
            ],
            options={
                'verbose_name': 'web拉数据登录凭证',
                'verbose_name_plural': 'web拉数据登录凭证',
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='用户昵称')),
                ('password', models.CharField(max_length=50, verbose_name='密码')),
                ('phone', models.CharField(max_length=11, verbose_name='手机号')),
                ('code', models.CharField(blank=True, max_length=50, null=True, verbose_name='验证码')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('status', models.IntegerField(choices=[(0, '正常'), (1, '停用')], default=0, verbose_name='状态')),
                ('icon', models.ImageField(null=True, upload_to='member/', verbose_name='用户头像')),
                ('token', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='登录生成token')),
                ('message_view', models.CharField(blank=True, default='', max_length=9999, null=True, verbose_name='消息view记录')),
                ('area', models.CharField(default='', max_length=2000, verbose_name='权限选项')),
            ],
            options={
                'verbose_name': '会员',
                'verbose_name_plural': '会员',
            },
        ),
        migrations.CreateModel(
            name='Month_data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_type', models.CharField(default='', max_length=20, null=True, verbose_name='设备类型')),
                ('create_time', models.DateTimeField(null=True, verbose_name='发出时间')),
                ('state', models.CharField(default='', max_length=20, null=True, verbose_name='报警状态')),
                ('battery_voltage', models.CharField(default='', max_length=255, null=True, verbose_name='电压')),
                ('device_id', models.CharField(default='', max_length=50, null=True, verbose_name='设备编号')),
                ('received_time', models.DateTimeField(null=True, verbose_name='接收时间')),
                ('info_type', models.CharField(default='', max_length=20, null=True, verbose_name='数据状态类型')),
                ('protocol_version', models.CharField(default='', max_length=255, null=True, verbose_name='协议版本')),
                ('software_version', models.CharField(default='', max_length=255, null=True, verbose_name='软件版本')),
                ('smoke_concentration', models.CharField(default='', max_length=255, null=True, verbose_name='烟感点')),
                ('get_time', models.DateTimeField(auto_now_add=True, verbose_name='入表时间')),
            ],
            options={
                'verbose_name': '月志',
                'verbose_name_plural': '月志',
            },
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notice_title', models.CharField(default='', max_length=50, unique=True, verbose_name='公告标题')),
                ('comment', models.TextField(default='', verbose_name='公告内容')),
                ('notice_time', models.DateTimeField(auto_now_add=True, verbose_name='发布时间')),
                ('status', models.IntegerField(choices=[(0, '显示'), (1, '不显示')], default=0, verbose_name='状态')),
            ],
            options={
                'verbose_name': '公告表',
                'verbose_name_plural': '公告表',
            },
        ),
        migrations.CreateModel(
            name='Warning_data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_type', models.CharField(default='', max_length=20, null=True, verbose_name='设备类型')),
                ('create_time', models.DateTimeField(null=True, verbose_name='发出时间')),
                ('state', models.CharField(default='', max_length=20, null=True, verbose_name='报警状态')),
                ('battery_voltage', models.CharField(default='', max_length=255, null=True, verbose_name='电压')),
                ('device_id', models.CharField(default='', max_length=50, null=True, verbose_name='设备编号')),
                ('received_time', models.DateTimeField(null=True, verbose_name='接收时间')),
                ('info_type', models.CharField(default='', max_length=20, null=True, verbose_name='数据状态类型')),
                ('protocol_version', models.CharField(default='', max_length=255, null=True, verbose_name='协议版本')),
                ('software_version', models.CharField(default='', max_length=255, null=True, verbose_name='软件版本')),
                ('smoke_concentration', models.CharField(default='', max_length=255, null=True, verbose_name='烟感点')),
                ('get_time', models.DateTimeField(auto_now_add=True, verbose_name='入表时间')),
                ('status', models.CharField(default='True', max_length=50, null=True, verbose_name='处理标识')),
            ],
            options={
                'verbose_name': '火警事件',
                'verbose_name_plural': '火警事件',
            },
        ),
        migrations.CreateModel(
            name='Week_data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_type', models.CharField(default='', max_length=20, null=True, verbose_name='设备类型')),
                ('create_time', models.DateTimeField(null=True, verbose_name='发出时间')),
                ('state', models.CharField(default='', max_length=20, null=True, verbose_name='报警状态')),
                ('battery_voltage', models.CharField(default='', max_length=255, null=True, verbose_name='电压')),
                ('device_id', models.CharField(default='', max_length=50, null=True, verbose_name='设备编号')),
                ('received_time', models.DateTimeField(null=True, verbose_name='接收时间')),
                ('info_type', models.CharField(default='', max_length=20, null=True, verbose_name='数据状态类型')),
                ('protocol_version', models.CharField(default='', max_length=255, null=True, verbose_name='协议版本')),
                ('software_version', models.CharField(default='', max_length=255, null=True, verbose_name='软件版本')),
                ('smoke_concentration', models.CharField(default='', max_length=255, null=True, verbose_name='烟感点')),
                ('get_time', models.DateTimeField(auto_now_add=True, verbose_name='入表时间')),
            ],
            options={
                'verbose_name': '周志',
                'verbose_name_plural': '周志',
            },
        ),
        migrations.AddField(
            model_name='equipment',
            name='equipment_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='water_app.Equipment_type', verbose_name='物品类型'),
        ),
    ]
