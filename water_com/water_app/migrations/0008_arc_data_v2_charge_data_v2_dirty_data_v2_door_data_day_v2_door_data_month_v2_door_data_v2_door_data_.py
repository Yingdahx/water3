# Generated by Django 2.0.6 on 2018-06-27 15:42

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('water_app', '0007_auto_20180626_1242'),
    ]

    operations = [
        migrations.CreateModel(
            name='Arc_data_v2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(default='', max_length=255, null=True, verbose_name='设备编号')),
                ('src', models.CharField(default='', max_length=255, null=True, verbose_name='电弧状态')),
                ('status', models.CharField(default='', max_length=255, null=True, verbose_name='状态描述')),
                ('msgType', models.CharField(default='', max_length=255, null=True, verbose_name='消息类型')),
                ('devType', models.CharField(default='', max_length=255, null=True, verbose_name='设备类型')),
                ('ld', models.CharField(default='', max_length=255, null=True, verbose_name='漏损量')),
                ('ia', models.CharField(default='', max_length=255, null=True, verbose_name='电流')),
                ('ua', models.CharField(default='', max_length=255, null=True, verbose_name='电压')),
                ('ta', models.CharField(default='', max_length=255, null=True, verbose_name='温度1')),
                ('tb', models.CharField(default='', max_length=255, null=True, verbose_name='温度2')),
                ('received_time', models.DateTimeField(null=True, verbose_name='日志时间')),
                ('get_time', models.DateTimeField(auto_now_add=True, verbose_name='入表时间')),
            ],
            options={
                'verbose_name': '电弧灭弧log原信息v2',
                'verbose_name_plural': '电弧灭弧log原信息v2',
            },
        ),
        migrations.CreateModel(
            name='Charge_data_v2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(default='', max_length=255, null=True, verbose_name='设备编号')),
                ('pile_type', models.CharField(default='', max_length=255, null=True, verbose_name='类型')),
                ('plugNumber', models.CharField(default='', max_length=255, null=True, verbose_name='充电口编号')),
                ('unitPrice', models.CharField(default='', max_length=255, null=True, verbose_name='电费单价')),
                ('minPrice', models.CharField(default='', max_length=255, null=True, verbose_name='电费最低价格')),
                ('attachPrice', models.CharField(default='', max_length=255, null=True, verbose_name='电费附加费')),
                ('overdraft', models.CharField(default='', max_length=255, null=True, verbose_name='透支系数')),
                ('factor', models.CharField(default='', max_length=255, null=True, verbose_name='校正因子')),
                ('maxPlugPower', models.CharField(default='', max_length=255, null=True, verbose_name='插头的最大功率')),
                ('maxDevicePower', models.CharField(default='', max_length=255, null=True, verbose_name='设备的最大功率')),
                ('area', models.CharField(default='', max_length=255, null=True, verbose_name='地区名称')),
                ('location', models.CharField(default='', max_length=255, null=True, verbose_name='设备位置')),
                ('inusePlugNumber', models.CharField(default='', max_length=255, null=True, verbose_name='插头数量')),
                ('isOnline', models.CharField(default='', max_length=255, null=True, verbose_name='联机状态')),
                ('plugs1', models.CharField(default='', max_length=255, null=True, verbose_name='插口1')),
                ('plugs2', models.CharField(default='', max_length=255, null=True, verbose_name='插口2')),
                ('plugs3', models.CharField(default='', max_length=255, null=True, verbose_name='插口3')),
                ('plugs4', models.CharField(default='', max_length=255, null=True, verbose_name='插口4')),
                ('plugs5', models.CharField(default='', max_length=255, null=True, verbose_name='插口5')),
                ('plugs6', models.CharField(default='', max_length=255, null=True, verbose_name='插口6')),
                ('plugs7', models.CharField(default='', max_length=255, null=True, verbose_name='插口7')),
                ('plugs8', models.CharField(default='', max_length=255, null=True, verbose_name='插口8')),
                ('plugs9', models.CharField(default='', max_length=255, null=True, verbose_name='插口9')),
                ('plugs10', models.CharField(default='', max_length=255, null=True, verbose_name='插口10')),
                ('received_time', models.DateTimeField(null=True, verbose_name='日志时间')),
                ('get_time', models.DateTimeField(auto_now_add=True, verbose_name='入表时间')),
            ],
            options={
                'verbose_name': '充电桩log原信息v2',
                'verbose_name_plural': '充电桩log原信息v2',
            },
        ),
        migrations.CreateModel(
            name='Dirty_data_v2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(default='', max_length=255, null=True, verbose_name='设备编号')),
                ('temperature', models.CharField(default='', max_length=255, null=True, verbose_name='温度')),
                ('bat', models.CharField(default='', max_length=255, null=True, verbose_name='电池电量')),
                ('height', models.CharField(default='', max_length=255, null=True, verbose_name='高度')),
                ('lng', models.CharField(default='', max_length=255, null=True, verbose_name='经度')),
                ('lat', models.CharField(default='', max_length=255, null=True, verbose_name='纬度')),
                ('height_status', models.CharField(default='', max_length=255, null=True, verbose_name='高度状态')),
                ('received_time', models.DateTimeField(null=True, verbose_name='接收时间')),
                ('get_time', models.DateTimeField(auto_now_add=True, verbose_name='入表时间')),
            ],
            options={
                'verbose_name': '垃圾满溢log原信息v2',
                'verbose_name_plural': '垃圾满溢log原信息v2',
            },
        ),
        migrations.CreateModel(
            name='Door_data_day_v2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(default='', max_length=255, null=True, verbose_name='设备编号')),
                ('status', models.CharField(default='', max_length=255, null=True, verbose_name='状态')),
                ('battery', models.CharField(default='', max_length=255, null=True, verbose_name='电池电量')),
                ('received_time', models.DateTimeField(null=True, verbose_name='接收时间')),
                ('get_time', models.DateTimeField(auto_now_add=True, verbose_name='入表时间')),
            ],
            options={
                'verbose_name': '门磁log日志信息v2',
                'verbose_name_plural': '门磁log日志信息v2',
            },
        ),
        migrations.CreateModel(
            name='Door_data_month_v2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(default='', max_length=255, null=True, verbose_name='设备编号')),
                ('status', models.CharField(default='', max_length=255, null=True, verbose_name='状态')),
                ('battery', models.CharField(default='', max_length=255, null=True, verbose_name='电池电量')),
                ('received_time', models.DateTimeField(null=True, verbose_name='接收时间')),
                ('get_time', models.DateTimeField(auto_now_add=True, verbose_name='入表时间')),
            ],
            options={
                'verbose_name': '门磁log月志信息v2',
                'verbose_name_plural': '门磁log月志信息v2',
            },
        ),
        migrations.CreateModel(
            name='Door_data_v2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(default='', max_length=255, null=True, verbose_name='设备编号')),
                ('status', models.CharField(default='', max_length=255, null=True, verbose_name='状态')),
                ('battery', models.CharField(default='', max_length=255, null=True, verbose_name='电池电量')),
                ('received_time', models.DateTimeField(null=True, verbose_name='接收时间')),
                ('get_time', models.DateTimeField(auto_now_add=True, verbose_name='入表时间')),
            ],
            options={
                'verbose_name': '门磁log原信息v2',
                'verbose_name_plural': '门磁log原信息v2',
            },
        ),
        migrations.CreateModel(
            name='Door_data_week_v2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(default='', max_length=255, null=True, verbose_name='设备编号')),
                ('status', models.CharField(default='', max_length=255, null=True, verbose_name='状态')),
                ('battery', models.CharField(default='', max_length=255, null=True, verbose_name='电池电量')),
                ('received_time', models.DateTimeField(null=True, verbose_name='接收时间')),
                ('get_time', models.DateTimeField(auto_now_add=True, verbose_name='入表时间')),
            ],
            options={
                'verbose_name': '门磁log周志信息v2',
                'verbose_name_plural': '门磁log周志信息v2',
            },
        ),
        migrations.CreateModel(
            name='Ground_data_v2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(default='', max_length=255, null=True, verbose_name='设备编号')),
                ('status', models.CharField(default='', max_length=255, null=True, verbose_name='状态')),
                ('start_symbol', models.CharField(default='', max_length=255, null=True, verbose_name='起始符号')),
                ('region_number', models.CharField(default='', max_length=255, null=True, verbose_name='区域号码')),
                ('parking_log_id', models.CharField(default='', max_length=255, null=True, verbose_name='停车场标识')),
                ('serial_number', models.CharField(default='', max_length=255, null=True, verbose_name='序列号')),
                ('signal_strength', models.CharField(default='', max_length=255, null=True, verbose_name='信号强度')),
                ('battery', models.CharField(default='', max_length=255, null=True, verbose_name='电池')),
                ('received_time', models.DateTimeField(null=True, verbose_name='接收时间')),
                ('get_time', models.DateTimeField(auto_now_add=True, verbose_name='入表时间')),
            ],
            options={
                'verbose_name': '地磁log原信息v2',
                'verbose_name_plural': '地磁log原信息v2',
            },
        ),
        migrations.CreateModel(
            name='Human_data_v2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(default='', max_length=255, null=True, verbose_name='设备编号')),
                ('bat', models.CharField(default='', max_length=255, null=True, verbose_name='电量')),
                ('temperature', models.CharField(default='', max_length=255, null=True, verbose_name='温度')),
                ('illuminance', models.CharField(default='', max_length=255, null=True, verbose_name='照度')),
                ('occupy', models.CharField(default='', max_length=255, null=True, verbose_name='有无动静')),
                ('received_time', models.DateTimeField(null=True, verbose_name='日志时间')),
                ('get_time', models.DateTimeField(auto_now_add=True, verbose_name='入表时间')),
            ],
            options={
                'verbose_name': '人体红外感应log原信息v2',
                'verbose_name_plural': '人体红外感应log原信息v2',
            },
        ),
        migrations.CreateModel(
            name='Infrared_data_v2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(default='', max_length=255, null=True, verbose_name='设备编号')),
                ('status', models.CharField(default='', max_length=255, null=True, verbose_name='状态')),
                ('received_time', models.DateTimeField(null=True, verbose_name='日志时间')),
                ('get_time', models.DateTimeField(auto_now_add=True, verbose_name='入表时间')),
            ],
            options={
                'verbose_name': '红外周界log原信息v2',
                'verbose_name_plural': '红外周界log原信息v2',
            },
        ),
        migrations.CreateModel(
            name='Lift_data_v2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(default='', max_length=255, null=True, verbose_name='设备编号')),
                ('lift_type', models.CharField(default='', max_length=255, null=True, verbose_name='类型')),
                ('lift_len', models.CharField(default='', max_length=255, null=True, verbose_name='长度')),
                ('address', models.CharField(default='', max_length=255, null=True, verbose_name='地址')),
                ('cmd', models.CharField(default='', max_length=255, null=True, verbose_name='命令')),
                ('lift_data', models.CharField(default='', max_length=255, null=True, verbose_name='类型值')),
                ('down', models.CharField(default='', max_length=255, null=True, verbose_name='上行')),
                ('up', models.CharField(default='', max_length=255, null=True, verbose_name='下行')),
                ('current_level', models.CharField(default='', max_length=255, null=True, verbose_name='当前层')),
                ('highest', models.CharField(default='', max_length=255, null=True, verbose_name='最高层')),
                ('received_time', models.DateTimeField(null=True, verbose_name='日志时间')),
                ('get_time', models.DateTimeField(auto_now_add=True, verbose_name='入表时间')),
            ],
            options={
                'verbose_name': '电梯传感器log原信息v2',
                'verbose_name_plural': '电梯传感器log原信息v2',
            },
        ),
        migrations.CreateModel(
            name='Oxygen_data_v2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(default='', max_length=255, null=True, verbose_name='设备编号')),
                ('num', models.CharField(default='', max_length=255, null=True, verbose_name='num')),
                ('ox_len', models.CharField(default='', max_length=255, null=True, verbose_name='len')),
                ('bat', models.CharField(default='', max_length=255, null=True, verbose_name='电池电压')),
                ('doxy', models.CharField(default='', max_length=255, null=True, verbose_name='溶解氧mg/l')),
                ('doxys', models.CharField(default='', max_length=255, null=True, verbose_name='溶解氧饱和度%')),
                ('temperature', models.CharField(default='', max_length=255, null=True, verbose_name='温度')),
                ('t_style', models.CharField(default='', max_length=255, null=True, verbose_name='周期')),
                ('received_time', models.DateTimeField(null=True, verbose_name='日志时间')),
                ('get_time', models.DateTimeField(auto_now_add=True, verbose_name='入表时间')),
            ],
            options={
                'verbose_name': '溶解氧log原信息v2',
                'verbose_name_plural': '溶解氧log原信息v2',
            },
        ),
        migrations.CreateModel(
            name='PH_data_v2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(default='', max_length=255, null=True, verbose_name='设备编号')),
                ('num', models.CharField(default='', max_length=255, null=True, verbose_name='num')),
                ('ph_len', models.CharField(default='', max_length=255, null=True, verbose_name='len')),
                ('bat', models.CharField(default='', max_length=255, null=True, verbose_name='电池电压')),
                ('ph', models.CharField(default='', max_length=255, null=True, verbose_name='PH值')),
                ('temperature', models.CharField(default='', max_length=255, null=True, verbose_name='温度')),
                ('t_style', models.CharField(default='', max_length=255, null=True, verbose_name='周期')),
                ('received_time', models.DateTimeField(null=True, verbose_name='日志时间')),
                ('get_time', models.DateTimeField(auto_now_add=True, verbose_name='入表时间')),
            ],
            options={
                'verbose_name': 'PH传感log原信息v2',
                'verbose_name_plural': 'PH传感log原信息v2',
            },
        ),
        migrations.CreateModel(
            name='Recognition_data_v2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(default='', max_length=255, null=True, verbose_name='设备编号')),
                ('sex', models.CharField(default='', max_length=255, null=True, verbose_name='性别')),
                ('age', models.CharField(default='', max_length=255, null=True, verbose_name='年龄')),
                ('glass', models.CharField(default='', max_length=255, null=True, verbose_name='是否戴眼镜')),
                ('emotion', models.CharField(default='', max_length=255, null=True, verbose_name='表情')),
                ('personName', models.CharField(default='', max_length=255, null=True, verbose_name='姓名')),
                ('imageWidth', models.CharField(default='', max_length=255, null=True, verbose_name='图片宽度')),
                ('imageHeight', models.CharField(default='', max_length=255, null=True, verbose_name='图片高度')),
                ('fileLength', models.CharField(default='', max_length=255, null=True, verbose_name='图片大小')),
                ('rawInBase64', models.CharField(default='', max_length=255, null=True, verbose_name='图片URL')),
                ('received_time', models.DateTimeField(null=True, verbose_name='日志时间')),
                ('get_time', models.DateTimeField(auto_now_add=True, verbose_name='入表时间')),
            ],
            options={
                'verbose_name': '人脸识别log原信息v2',
                'verbose_name_plural': '人脸识别log原信息v2',
            },
        ),
        migrations.CreateModel(
            name='Smoke_data_day_v2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(default='', max_length=255, null=True, verbose_name='设备编号')),
                ('software_version', models.CharField(default='', max_length=255, null=True, verbose_name='软件版本')),
                ('protocol_version', models.CharField(default='', max_length=255, null=True, verbose_name='协议版本')),
                ('device_type', models.CharField(default='', max_length=255, null=True, verbose_name='设备类型')),
                ('info_type', models.CharField(default='', max_length=255, null=True, verbose_name='信息类型')),
                ('battery_voltage', models.CharField(default='', max_length=255, null=True, verbose_name='电磁电压')),
                ('smoke_concentration', models.CharField(default='', max_length=255, null=True, verbose_name='烟浓度')),
                ('received_time', models.DateTimeField(null=True, verbose_name='日志时间')),
                ('get_time', models.DateTimeField(auto_now_add=True, verbose_name='入表时间')),
            ],
            options={
                'verbose_name': '烟雾日志log信息v2',
                'verbose_name_plural': '烟雾日志log信息v2',
            },
        ),
        migrations.CreateModel(
            name='Smoke_data_month_v2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(default='', max_length=255, null=True, verbose_name='设备编号')),
                ('software_version', models.CharField(default='', max_length=255, null=True, verbose_name='软件版本')),
                ('protocol_version', models.CharField(default='', max_length=255, null=True, verbose_name='协议版本')),
                ('device_type', models.CharField(default='', max_length=255, null=True, verbose_name='设备类型')),
                ('info_type', models.CharField(default='', max_length=255, null=True, verbose_name='信息类型')),
                ('battery_voltage', models.CharField(default='', max_length=255, null=True, verbose_name='电磁电压')),
                ('smoke_concentration', models.CharField(default='', max_length=255, null=True, verbose_name='烟浓度')),
                ('received_time', models.DateTimeField(null=True, verbose_name='日志时间')),
                ('get_time', models.DateTimeField(auto_now_add=True, verbose_name='入表时间')),
            ],
            options={
                'verbose_name': '烟雾月志log信息v2',
                'verbose_name_plural': '烟雾月志log信息v2',
            },
        ),
        migrations.CreateModel(
            name='Smoke_data_v2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(default='', max_length=255, null=True, verbose_name='设备编号')),
                ('software_version', models.CharField(default='', max_length=255, null=True, verbose_name='软件版本')),
                ('protocol_version', models.CharField(default='', max_length=255, null=True, verbose_name='协议版本')),
                ('device_type', models.CharField(default='', max_length=255, null=True, verbose_name='设备类型')),
                ('info_type', models.CharField(default='', max_length=255, null=True, verbose_name='信息类型')),
                ('battery_voltage', models.CharField(default='', max_length=255, null=True, verbose_name='电磁电压')),
                ('smoke_concentration', models.CharField(default='', max_length=255, null=True, verbose_name='烟浓度')),
                ('received_time', models.DateTimeField(null=True, verbose_name='日志时间')),
                ('get_time', models.DateTimeField(auto_now_add=True, verbose_name='入表时间')),
            ],
            options={
                'verbose_name': '烟雾log原信息v2',
                'verbose_name_plural': '烟雾log原信息v2',
            },
        ),
        migrations.CreateModel(
            name='Smoke_data_week_v2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(default='', max_length=255, null=True, verbose_name='设备编号')),
                ('software_version', models.CharField(default='', max_length=255, null=True, verbose_name='软件版本')),
                ('protocol_version', models.CharField(default='', max_length=255, null=True, verbose_name='协议版本')),
                ('device_type', models.CharField(default='', max_length=255, null=True, verbose_name='设备类型')),
                ('info_type', models.CharField(default='', max_length=255, null=True, verbose_name='信息类型')),
                ('battery_voltage', models.CharField(default='', max_length=255, null=True, verbose_name='电磁电压')),
                ('smoke_concentration', models.CharField(default='', max_length=255, null=True, verbose_name='烟浓度')),
                ('received_time', models.DateTimeField(null=True, verbose_name='日志时间')),
                ('get_time', models.DateTimeField(auto_now_add=True, verbose_name='入表时间')),
            ],
            options={
                'verbose_name': '烟雾周志log信息v2',
                'verbose_name_plural': '烟雾周志log信息v2',
            },
        ),
        migrations.CreateModel(
            name='Water_data_day_v2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(default='', max_length=255, null=True, verbose_name='设备编号')),
                ('STATETYPE', models.CharField(default='', max_length=255, null=True, verbose_name='水压状态类型ID')),
                ('STATENAME', models.CharField(default='', max_length=255, null=True, verbose_name='水压状态类型名称')),
                ('DSNUM', models.CharField(default='', max_length=255, null=True, verbose_name='唯一标识')),
                ('HYDRANTTYPE', models.CharField(default='', max_length=255, null=True, verbose_name='类型')),
                ('WATERTYPE', models.CharField(default='', max_length=255, null=True, verbose_name='仪表')),
                ('RSSI', models.CharField(default='', max_length=255, null=True, verbose_name='信号RSSI')),
                ('lon', models.CharField(default='', max_length=255, null=True, verbose_name='经度')),
                ('lat', models.CharField(default='', max_length=255, null=True, verbose_name='维度')),
                ('PRESSURE', models.CharField(default='', max_length=255, null=True, verbose_name='水压')),
                ('DUMP_ENERGY', models.CharField(default='', max_length=255, null=True, verbose_name='倾倒能量的百分比')),
                ('received_time', models.DateTimeField(null=True, verbose_name='日志时间')),
                ('get_time', models.DateTimeField(auto_now_add=True, verbose_name='入表时间')),
            ],
            options={
                'verbose_name': '水压log日志信息v2',
                'verbose_name_plural': '水压log日志信息v2',
            },
        ),
        migrations.CreateModel(
            name='Water_data_month_v2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(default='', max_length=255, null=True, verbose_name='设备编号')),
                ('STATETYPE', models.CharField(default='', max_length=255, null=True, verbose_name='水压状态类型ID')),
                ('STATENAME', models.CharField(default='', max_length=255, null=True, verbose_name='水压状态类型名称')),
                ('DSNUM', models.CharField(default='', max_length=255, null=True, verbose_name='唯一标识')),
                ('HYDRANTTYPE', models.CharField(default='', max_length=255, null=True, verbose_name='类型')),
                ('WATERTYPE', models.CharField(default='', max_length=255, null=True, verbose_name='仪表')),
                ('RSSI', models.CharField(default='', max_length=255, null=True, verbose_name='信号RSSI')),
                ('lon', models.CharField(default='', max_length=255, null=True, verbose_name='经度')),
                ('lat', models.CharField(default='', max_length=255, null=True, verbose_name='维度')),
                ('PRESSURE', models.CharField(default='', max_length=255, null=True, verbose_name='水压')),
                ('DUMP_ENERGY', models.CharField(default='', max_length=255, null=True, verbose_name='倾倒能量的百分比')),
                ('received_time', models.DateTimeField(null=True, verbose_name='日志时间')),
                ('get_time', models.DateTimeField(auto_now_add=True, verbose_name='入表时间')),
            ],
            options={
                'verbose_name': '水压log月志信息v2',
                'verbose_name_plural': '水压log月志信息v2',
            },
        ),
        migrations.CreateModel(
            name='Water_data_v2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(default='', max_length=255, null=True, verbose_name='设备编号')),
                ('STATETYPE', models.CharField(default='', max_length=255, null=True, verbose_name='水压状态类型ID')),
                ('STATENAME', models.CharField(default='', max_length=255, null=True, verbose_name='水压状态类型名称')),
                ('DSNUM', models.CharField(default='', max_length=255, null=True, verbose_name='唯一标识')),
                ('HYDRANTTYPE', models.CharField(default='', max_length=255, null=True, verbose_name='类型')),
                ('WATERTYPE', models.CharField(default='', max_length=255, null=True, verbose_name='仪表')),
                ('RSSI', models.CharField(default='', max_length=255, null=True, verbose_name='信号RSSI')),
                ('lon', models.CharField(default='', max_length=255, null=True, verbose_name='经度')),
                ('lat', models.CharField(default='', max_length=255, null=True, verbose_name='维度')),
                ('PRESSURE', models.CharField(default='', max_length=255, null=True, verbose_name='水压')),
                ('DUMP_ENERGY', models.CharField(default='', max_length=255, null=True, verbose_name='倾倒能量的百分比')),
                ('received_time', models.DateTimeField(null=True, verbose_name='日志时间')),
                ('get_time', models.DateTimeField(auto_now_add=True, verbose_name='入表时间')),
            ],
            options={
                'verbose_name': '水压log原信息v2',
                'verbose_name_plural': '水压log原信息v2',
            },
        ),
        migrations.CreateModel(
            name='Water_data_week_v2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(default='', max_length=255, null=True, verbose_name='设备编号')),
                ('STATETYPE', models.CharField(default='', max_length=255, null=True, verbose_name='水压状态类型ID')),
                ('STATENAME', models.CharField(default='', max_length=255, null=True, verbose_name='水压状态类型名称')),
                ('DSNUM', models.CharField(default='', max_length=255, null=True, verbose_name='唯一标识')),
                ('HYDRANTTYPE', models.CharField(default='', max_length=255, null=True, verbose_name='类型')),
                ('WATERTYPE', models.CharField(default='', max_length=255, null=True, verbose_name='仪表')),
                ('RSSI', models.CharField(default='', max_length=255, null=True, verbose_name='信号RSSI')),
                ('lon', models.CharField(default='', max_length=255, null=True, verbose_name='经度')),
                ('lat', models.CharField(default='', max_length=255, null=True, verbose_name='维度')),
                ('PRESSURE', models.CharField(default='', max_length=255, null=True, verbose_name='水压')),
                ('DUMP_ENERGY', models.CharField(default='', max_length=255, null=True, verbose_name='倾倒能量的百分比')),
                ('received_time', models.DateTimeField(null=True, verbose_name='日志时间')),
                ('get_time', models.DateTimeField(auto_now_add=True, verbose_name='入表时间')),
            ],
            options={
                'verbose_name': '水压log周志信息v2',
                'verbose_name_plural': '水压log周志信息v2',
            },
        ),
    ]
